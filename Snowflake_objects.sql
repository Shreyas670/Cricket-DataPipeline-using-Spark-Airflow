create or replace TABLE CRICKET_DB.PUBLIC.MATCH_RAW (
	RAW VARIANT,
	LOADED_AT TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP()
);

create or replace TABLE CRICKET_DB.PUBLIC.INNINGS_RAW (
	RAW VARIANT,
	LOADED_AT TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP()
);

create or replace TABLE CRICKET_DB.PUBLIC.MATCH (
	MATCH_ID VARCHAR(16777216),
	CITY VARCHAR(16777216),
	DATES VARIANT,
	EVENT_NAME VARCHAR(16777216),
	FILE_NAME VARCHAR(16777216),
	MATCH_REFEREES VARIANT,
	MATCH_TYPE VARCHAR(16777216),
	MATCH_TYPE_NUMBER NUMBER(38,0),
	PLAYERS_GENDER VARCHAR(16777216),
	PLAYER_OF_MATCH VARIANT,
	RESULT VARIANT,
	SEASON VARCHAR(16777216),
	TEAM_A VARCHAR(16777216),
	TEAM_A_PLAYERS VARIANT,
	TEAM_B VARCHAR(16777216),
	TEAM_B_PLAYERS VARIANT,
	TEAM_TYPE VARCHAR(16777216),
	TOSS_DECISION VARCHAR(16777216),
	TOSS_WINNER VARCHAR(16777216),
	TV_UMPIRES VARIANT,
	UMPIRES VARIANT,
	VENUE VARIANT,
	LOADED_AT TIMESTAMP_LTZ(9)
);

create or replace TABLE CRICKET_DB.PUBLIC.INNINGS (
	MATCH_ID VARCHAR(16777216),
	FILE_NAME VARCHAR(16777216),
	BATTER VARCHAR(16777216),
	BATTER_RUNS VARIANT,
	BOWLER VARCHAR(16777216),
	EXTRAS_RUNS VARIANT,
	IS_WICKET VARCHAR(16777216),
	NON_STRIKER VARCHAR(16777216),
	OVER VARIANT,
	TEAM VARCHAR(16777216),
	WICKET_TYPE VARIANT,
	WICKETS VARIANT,
	LOADED_AT TIMESTAMP_LTZ(9)
);

CREATE OR REPLACE PROCEDURE CRICKET_DB.PUBLIC.LOAD_CRICKET_DATA()
RETURNS VARCHAR
LANGUAGE PYTHON
RUNTIME_VERSION = '3.11'
PACKAGES = ('snowflake-snowpark-python')
HANDLER = 'main'
EXECUTE AS OWNER
AS '
def main(session):
    session.sql("TRUNCATE TABLE INNINGS_RAW").collect()
    session.sql("TRUNCATE TABLE MATCH_RAW").collect()
    session.sql("""COPY INTO INNINGS_RAW(RAW)
FROM @CRICKET_DB.PUBLIC.AWS_EXT_STAGE
FILE_FORMAT = (format_name=''CRICKET_PARQUET'')
PATTERN = ''.*innings.*[.]parquet''""").collect()

    session.sql("""COPY INTO MATCH_RAW(RAW)
FROM @CRICKET_DB.PUBLIC.AWS_EXT_STAGE
FILE_FORMAT = (format_name=''CRICKET_PARQUET'')
PATTERN = ''.*/match.*[.]parquet''""").collect()

    session.sql("DELETE FROM INNINGS WHERE FILE_NAME IN (SELECT FILE_NAME FROM INNINGS_RAW)").collect()
    session.sql("DELETE FROM MATCH WHERE FILE_NAME IN (SELECT FILE_NAME FROM MATCH_RAW)").collect()

    session.sql("""INSERT INTO MATCH
SELECT RAW:"MATCH_ID"::varchar AS MATCH_ID,
RAW:"CITY"::varchar AS CITY, RAW:"DATES" AS DATES,
RAW:"EVENT_NAME"::varchar AS EVENT_NAME,
RAW:"FILE_NAME"::varchar AS FILE_NAME,
RAW:"MATCH_REFEREES" AS MATCH_REFEREES,
RAW:"MATCH_TYPE"::varchar AS MATCH_TYPE,
RAW:"MATCH_TYPE_NUMBER"::number AS MATCH_TYPE_NUMBER,
RAW:"PLAYERS_GENDER"::varchar AS PLAYERS_GENDER,
RAW:"PLAYER_OF_MATCH" AS PLAYER_OF_MATCH,
RAW:"RESULT" AS RESULT,
RAW:"SEASON"::varchar AS SEASON,
RAW:"TEAM_A"::varchar AS TEAM_A,
RAW:"TEAM_A_PLAYERS" AS TEAM_A_PLAYERS,
RAW:"TEAM_B"::varchar AS TEAM_B,
RAW:"TEAM_B_PLAYERS" AS TEAM_B_PLAYERS,
RAW:"TEAM_TYPE"::varchar AS TEAM_TYPE,
RAW:"TOSS_DECISION"::varchar AS TOSS_DECISION,
RAW:"TOSS_WINNER"::varchar AS TOSS_WINNER ,
RAW:"TV_UMPIRES" AS TV_UMPIRES,
RAW:"UMPIRES" AS UMPIRES,
RAW:"VENUE" AS VENUE,
current_timestamp AS LOADED_AT
FROM MATCH_RAW""").collect()

    session.sql(""" INSERT INTO INNINGS
SELECT RAW:"match_id"::varchar AS match_id,
RAW:"FILE_NAME"::varchar AS FILE_NAME,
RAW:"batter"::varchar AS batter,
RAW:"batter_runs" AS batter_runs,
RAW:"bowler"::varchar AS bowler,
RAW:"extras_runs" AS extras_runs,
RAW:"is_wicket"::varchar AS is_wicket,
RAW:"non_striker"::varchar AS non_striker,
RAW:"over" AS over,
RAW:"team"::varchar AS team,
RAW:"wicket_type" AS wicket_type,
RAW:"wickets" AS wickets,
CURRENT_TIMESTAMP AS LOADED_AT
FROM INNINGS_RAW""").collect()

    return "done"

  
';
